import{capitalizeFirstLetter,getQueryString,globalWait}from"./helpers.js";const searchInput=document.getElementById("table-search"),tbody=document.querySelector("tbody"),page=getQueryString("page"),branchVal=getQueryString("branch"),pageList=document.getElementById("page-list"),instructorSelect=document.getElementById("instructor-select");function finishGroup(t,e){const n=new FormData,r=(new Date).toLocaleString("sv-SE").replace("T"," ");n.append("group_id",t),n.append("finist_date",r),fetch("functions/Groups/finish_group.php",{method:"POST",body:n}).then((t=>t.json())).then((t=>{if("success"===t.status){e.closest("tr").remove(),notyf.success("Group Finished Successfully")}else alert("Error: "+t.message)})).catch((t=>{alert("An error occurred while finishing the group")}))}function setTable(t,e=null){tbody.innerHTML="",0==t.data.length&&(tbody.innerHTML='\n        <tr>\n          <td class="px-6 py-4 font-bold bg-white" colspan="7"> No Group Found </td>\n        </tr>\n    '),t.data.forEach((t=>{const e=document.createElement("tr");e.className="bg-white border-b border-gray-200 hover:bg-gray-50",e.innerHTML=`\n      <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">\n          ${t.group_name.charAt(0).toUpperCase()+t.group_name.slice(1)}\n      </th>\n      <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">\n          ${2==t.group_time||5==t.group_time?`${t.group_time} - Friday`:t.group_time}\n      </th>\n      <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">\n      <span class="${dayBadgeColor(t.group_day)} text-sm font-medium me-2 px-2.5 py-1.5 rounded-md">${t.group_day}</span></th>\n      <td class="px-6 py-4">\n      <span class="w-2 h-2 ${branchIndicator(t.branch_name).bgColor} inline-block mr-2"></span>\n          ${t.instructor_name.charAt(0).toUpperCase()+t.instructor_name.slice(1)}\n      </td>\n      <td class="px-6 py-4 ${branchIndicator(t.branch_name).textColor}">\n          ${t.branch_name.charAt(0).toUpperCase()+t.branch_name.slice(1)}\n      </td> \n      <td class="px-6 py-4">\n          <span class="block">${t.month}</span>\n          ${t.formatted_date?t.formatted_date:"No date added"}\n      </td>           \n      <td class="px-6 py-4">\n          <a href="?action=edit&group_id=${t.id}" class="cursor-pointer border border-gray-300 py-1 px-2 rounded-lg font-medium text-blue-600 hover:underline mr-2 inline-block mb-2"><i class="fa-solid fa-pen-to-square mr-2"></i>\n            Edit\n          </a>\n          <button data-group-id="${t.id}" class="finish-group-btn cursor-pointer border border-gray-300 py-1 px-2 rounded-lg font-medium text-red-600 hover:underline">\n              <i class="fa-regular fa-circle-check mr-2"></i>Finish\n          </button>\n      </td>\n  `,tbody.appendChild(e)}))}async function fetchInstructors(t){try{const e=await fetch(`functions/Instructors/get_instructors.php?branch_id=${t}`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const n=await e.json();instructorSelect.innerHTML=t?"<option value=''>Choose Instructor</option>":"<option value=''>Select Branch First</option>",n.data&&n.data.forEach((t=>{const e=document.createElement("option");e.value=t.id,e.textContent=capitalizeFirstLetter(t.username),instructorSelect.appendChild(e)}))}catch(t){console.error("Error fetching instructors:",t),instructorSelect.innerHTML="<option value=''>Error loading instructors</option>"}}function branchIndicator(t){const e={tanta:"bg-teal-600",mansoura:"bg-blue-600",zagazig:"bg-purple-500",default:"bg-orange-600"},n={tanta:"text-teal-600",mansoura:"text-blue-700",zagazig:"text-purple-700",default:"text-orange-700"};return{bgColor:e[t=t.toLowerCase()]||e.default,textColor:n[t]||n.default}}function dayBadgeColor(t){const e={saturday:"bg-orange-100 text-orange-600",sunday:"bg-blue-100 text-blue-700",monday:"bg-pink-100 text-pink-700",default:"bg-orange-100 text-orange-700"};return e[t=t.toLowerCase()]||e.default}async function groupsTotalCount(t,e=null){await globalWait(1e3);const n=`functions/Groups/get_groups_count.php?branch_id=${encodeURIComponent(t)}`;fetch(n).then((t=>t.json())).then((t=>{document.querySelector(".total-inst-count").innerText=t})).catch((t=>console.error("Error:",t)))}document.addEventListener("DOMContentLoaded",(function(){fetch("functions/Branches/get_branches.php").then((t=>t.json())).then((t=>{"success"==t.status&&(branchSelect.innerHTML='<option value="" selected>Select a Branch</option>',t.data.forEach((t=>{let e=document.createElement("option");e.value=t.id,e.textContent=capitalizeFirstLetter(t.name),e.value==branchVal&&(e.selected=!0),branchSelect.appendChild(e)})))})).catch((t=>console.error("Error fetching lectures:",t))),groupsTotalCount(getQueryString("branch")),fetchInstructors(branchVal),instructorSelect.addEventListener("change",(function(){const t=this.value;t?pageList.classList.add("hidden"):pageList.classList.remove("hidden");let e="";e=t?`functions/Groups/get_groups.php?instructor_id=${encodeURIComponent(t)}&branch_id=${branchVal}`:`functions/Groups/get_groups.php?branch_id=${branchVal}`,fetch(e).then((t=>t.json())).then((t=>{setTable(t)})).catch((t=>console.error("Error:",t)))})),searchInput.addEventListener("input",(function(){const t=this.value.trim();fetchInstructors(branchVal);let e="";t?pageList.classList.add("hidden"):pageList.classList.remove("hidden"),e=branchVal?`functions/Groups/search_groups.php?search=${encodeURIComponent(t)}&branch_id=${encodeURIComponent(branchVal)}${page?`&page=${encodeURIComponent(page)}`:""}`:`functions/Groups/search_groups.php?search=${encodeURIComponent(t)}${page?`&page=${encodeURIComponent(page)}`:""}`,fetch(e).then((t=>t.json())).then((t=>{setTable(t)})).catch((t=>console.error("Error:",t)))})),tbody.addEventListener("click",(function(t){if(t.target.closest(".finish-group-btn")){const e=t.target.closest(".finish-group-btn"),n=e.dataset.groupId;confirm("Are you sure you want to finish this group?")&&finishGroup(n,e)}}))}));