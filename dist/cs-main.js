const searchInput=document.getElementById("table-search"),tbody=document.querySelector("tbody"),addInstructor=document.getElementById("addInstructor");function setTable(e){if(tbody.innerHTML="",0==e.data.length&&(tbody.innerHTML='\n        <tr>\n          <td class="px-6 py-4 font-bold" colspan="4"> No Customer Service Agent Found </td>\n        </tr>\n    '),"success"===e.status){const t=e.logged_instructor_role;e.data.forEach(e=>{const n=document.createElement("tr"),s=e.instructor_role===t?"disabled":"",r="cs-admin"==e.role?' <i class="fa-solid fa-user-shield ml-3 text-green-700"></i>':"";n.className="odd:bg-white even:bg-gray-50 bg-white border-b border-gray-200 hover:bg-gray-50";const o=e.is_active?"Active":"Disabled",a=e.is_active?" bg-green-50  text-green-700 ring-green-600/20 ":" bg-red-50 text-red-700 ring-red-600/10 ",c=e.is_active?"Disable":"Enable",i=e.is_active?"text-red-600":"text-green-600",d=e.is_active?'<i class="fa-solid fa-user-slash mr-1"></i>':'<i class="fa-solid fa-user mr-1"></i>';n.innerHTML=`\n                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">\n                    ${capitalizeFirstLetter(e.username)}\n                    ${r}\n                </th>\n                <td class="px-6 py-4">\n                \n                    ${e.branch_names?capitalizeFirstLetter(e.branch_names):"Not Assigned"}\n                </td>\n                <td class="px-6 py-4">\n                    <span class="inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset  ${a}">\n                        ${o}\n                    </span>\n                </td>\n                <td class="px-6 py-4">\n                    <button ${s} class="toggle-status-btn cursor-pointer text-sm border border-gray-300 py-1 px-2 rounded-lg hover:underline disabled:border-gray-200 disabled:bg-gray-50 disabled:text-gray-500 disabled:shadow-none disabled:cursor-not-allowed disabled:hover:no-underline mr-2 ${i}" data-agent-id="${e.id}">\n                        ${d}\n                        ${c}\n                    </button>\n                    <button class="delete-cs-btn text-sm border border-gray-300 py-1 px-2 rounded-lg font-medium text-red-500 hover:underline" data-agent-id="${e.id}">\n                        <i class="fa-solid fa-trash mr-1"></i> Delete\n                    </button>\n                </td>\n            `,tbody.appendChild(n)})}}function capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}function updateInstructorStatusUI(e,t){const n=t?"Disabled":"Active",s=t?"bg-red-50 text-red-700 ring-red-600/10":"bg-green-50 text-green-700 ring-green-600/20",r=t?"Enable":"Disable",o=t?"text-green-500":"text-red-500",a=t?'<i class="fa-solid fa-user mr-1"></i>':'<i class="fa-solid fa-user-slash mr-1"></i>',c=e.closest("tr").querySelector("td span");c.textContent=n,c.className=`inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset ${s}`,e.innerHTML=`${a} ${r}`,e.className=`toggle-status-btn cursor-pointer text-sm font-medium border border-gray-300 py-1 px-2 rounded-lg ${o} hover:underline mr-2`}document.addEventListener("DOMContentLoaded",function(){searchInput.addEventListener("input",function(){const e=this.value.trim();fetch(`functions/Customer-service/search_cs.php?search=${encodeURIComponent(e)}`).then(e=>e.json()).then(e=>{setTable(e)}).catch(e=>console.error("Error:",e))}),tbody.addEventListener("click",function(e){if(e.target.closest(".toggle-status-btn")){const t=e.target.closest(".toggle-status-btn"),n=t.dataset.agentId,s="Disable"===t.textContent.trim();confirm(s?"Are you sure you want to disable this CS Agent?":"Are you sure you want to enable this CS Agent?")&&fetch("functions/Customer-service/toggle_cs_status.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:`cs_id=${n}`}).then(e=>e.json()).then(e=>{"success"===e.status?(notyf.success("Customer service agent Update successfully"),updateInstructorStatusUI(t,s)):alert("Error updating Customer service status")}).catch(e=>{console.error("Error:",e),alert("Error updating Customer service status")})}if(e.target.closest(".delete-cs-btn")){const t=e.target.closest(".delete-cs-btn"),n=t.dataset.agentId;confirm("Are you sure you want to delete this CS Agent? This action cannot be undone.")&&fetch("functions/Customer-service/delete_cs.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:`cs_id=${n}`}).then(e=>e.json()).then(e=>{"success"===e.status?(notyf.success("Customer service agent deleted successfully"),t.closest("tr").remove()):notyf.error(e.message||"Error deleting Customer service agent")}).catch(e=>{console.error("Error:",e),notyf.error("Error deleting Customer service agent")})}})}),addInstructor.onclick=function(){fetch("functions/Branches/get_branches.php").then(e=>e.json()).then(e=>{"success"==e.status&&(branchesSelect.innerHTML='<option value="" selected>Choose a Branch</option>',e.data.forEach(e=>{let t=document.createElement("option");t.value=e.id,t.textContent=capitalizeFirstLetter(e.name),branchesSelect.appendChild(t)}))}).catch(e=>console.error("Error fetching lectures:",e))};