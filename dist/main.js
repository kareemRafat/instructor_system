import{capitalizeFirstLetter}from"./helpers.js";import{courseContent}from"./course-content.js";const groupSelect=document.getElementById("group"),track=document.getElementById("track"),startDate=document.getElementById("start-date"),endDate=document.getElementById("end-date");async function getGroupTrack(e){const t=await fetch(`functions/Lectures/get_group_track.php?group_id=${e}`),n=await t.json();if(n.data){document.querySelector(`#track option[value="${n.data.track_id}"]`).selected=!0,track.value=n.data.track_id;const e=new Event("change",{bubbles:!0});track.dispatchEvent(e)}}async function getGroupInfo(e){const t=await fetch(`functions/Groups/get_group.php?group_id=${e}`),n=await t.json();n.data&&(startDate.innerText=n.data.formatted_date,endDate.innerText="End : "+n.data.group_end_date)}function populateLectures(e){const t=document.getElementById("comment-input");window.slimSelect&&window.slimSelect.destroy(),t.innerHTML=e?'<option value="">Search for Lectures</option>':'<option value="">Select Track First</option>';const n=courseContent.find((t=>t.track==={1:"HTML",2:"CSS",3:"JavaScript",4:"PHP",5:"database",6:"Project"}[e]));if(!n)return;const o=Object.keys(n.lectures);if(1===o.length){n.lectures[o[0]].forEach(((e,n)=>{const o=document.createElement("option");o.value=e,o.textContent=e,t.appendChild(o)}))}else o.forEach((e=>{const o=document.createElement("optgroup");o.label=e,n.lectures[e].forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)})),t.appendChild(o)}));window.slimSelect=new SlimSelect({select:"#comment-input",settings:{placeholderText:"Search for Lectures",allowDeselect:!0,closeOnSelect:!0,showSearch:!0,searchPlaceholder:"Search Lectures...",searchText:"No Results",searchHighlight:!0}})}document.addEventListener("DOMContentLoaded",(()=>{fetch("functions/Groups/get_groups.php").then((e=>e.json())).then((e=>{e.data&&e.data.forEach((e=>{const t=document.createElement("option");t.value=e.id,t.textContent=capitalizeFirstLetter(e.name),e.name.toLowerCase().includes("training")||groupSelect.append(t)}))})).catch((e=>console.error("Error fetching groups:",e))),fetch("functions/Tracks/get_tracks.php").then((e=>e.json())).then((e=>{track.innerHTML='<option value="">Select Track</option>',e.data&&e.data.forEach((e=>{const t=document.createElement("option");t.value=e.id,t.textContent=e.name.toUpperCase(),track.appendChild(t)}))})).catch((e=>console.error("Error fetching groups:",e)))})),track.addEventListener("change",(function(){populateLectures(this.value)})),groupSelect.oninput=async function(){const e=this.value;if(!e)return track.value="",startDate.innerText="Group Start Date",endDate.innerText="Excpected End Date",void populateLectures(null);try{await getGroupTrack(e),await getGroupInfo(e)}catch(e){console.error("Error fetching tracks:",e)}};