-- Trigger for salary_bonuses
DELIMITER //
CREATE TRIGGER after_salary_bonuses_insert
AFTER INSERT ON salary_bonuses
FOR EACH ROW
BEGIN
    DECLARE v_basic_salary DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_day_value DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_target DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_overtime_days INT DEFAULT 0;
    DECLARE v_bonuses INT DEFAULT 0;
    DECLARE v_advances INT DEFAULT 0;
    DECLARE v_absent_days INT DEFAULT 0;
    DECLARE v_deduction_days INT DEFAULT 0;
    DECLARE v_total DECIMAL(10,2);
    DECLARE v_year INT;
    DECLARE v_month INT;

    -- Extract year and month from the inserted record
    SET v_year = YEAR(NEW.created_at);
    SET v_month = MONTH(NEW.created_at);

    -- Get salary record details
    SELECT 
        COALESCE(basic_salary, 0.00),
        COALESCE(day_value, 0.00),
        COALESCE(target, 0.00)
    INTO 
        v_basic_salary,
        v_day_value,
        v_target
    FROM salary_records
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month
    LIMIT 1;

    -- Get aggregated values
    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_overtime_days
    FROM salary_overtime_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_bonuses
    FROM salary_bonuses
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_advances
    FROM salary_advances
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_absent_days
    FROM salary_absent_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_deduction_days
    FROM salary_deductions
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    -- Calculate total
    SET v_total = v_basic_salary + 
                  (v_overtime_days * v_day_value) + 
                  v_target + 
                  v_bonuses - 
                  v_advances - 
                  (v_absent_days * v_day_value) - 
                  (v_deduction_days * v_day_value);

    -- Update salary_records
    UPDATE salary_records
    SET total = v_total
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;
END //
DELIMITER ;

-- Trigger for salary_advances
DELIMITER //
CREATE TRIGGER after_salary_advances_insert
AFTER INSERT ON salary_advances
FOR EACH ROW
BEGIN
    DECLARE v_basic_salary DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_day_value DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_target DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_overtime_days INT DEFAULT 0;
    DECLARE v_bonuses INT DEFAULT 0;
    DECLARE v_advances INT DEFAULT 0;
    DECLARE v_absent_days INT DEFAULT 0;
    DECLARE v_deduction_days INT DEFAULT 0;
    DECLARE v_total DECIMAL(10,2);
    DECLARE v_year INT;
    DECLARE v_month INT;

    -- Extract year and month from the inserted record
    SET v_year = YEAR(NEW.created_at);
    SET v_month = MONTH(NEW.created_at);

    -- Get salary record details
    SELECT 
        COALESCE(basic_salary, 0.00),
        COALESCE(day_value, 0.00),
        COALESCE(target, 0.00)
    INTO 
        v_basic_salary,
        v_day_value,
        v_target
    FROM salary_records
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month
    LIMIT 1;

    -- Get aggregated values
    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_overtime_days
    FROM salary_overtime_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_bonuses
    FROM salary_bonuses
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_advances
    FROM salary_advances
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_absent_days
    FROM salary_absent_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_deduction_days
    FROM salary_deductions
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    -- Calculate total
    SET v_total = v_basic_salary + 
                  (v_overtime_days * v_day_value) + 
                  v_target + 
                  v_bonuses - 
                  v_advances - 
                  (v_absent_days * v_day_value) - 
                  (v_deduction_days * v_day_value);

    -- Update salary_records
    UPDATE salary_records
    SET total = v_total
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;
END //
DELIMITER ;

-- Trigger for salary_absent_days
DELIMITER //
CREATE TRIGGER after_salary_absent_days_insert
AFTER INSERT ON salary_absent_days
FOR EACH ROW
BEGIN
    DECLARE v_basic_salary DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_day_value DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_target DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_overtime_days INT DEFAULT 0;
    DECLARE v_bonuses INT DEFAULT 0;
    DECLARE v_advances INT DEFAULT 0;
    DECLARE v_absent_days INT DEFAULT 0;
    DECLARE v_deduction_days INT DEFAULT 0;
    DECLARE v_total DECIMAL(10,2);
    DECLARE v_year INT;
    DECLARE v_month INT;

    -- Extract year and month from the inserted record
    SET v_year = YEAR(NEW.created_at);
    SET v_month = MONTH(NEW.created_at);

    -- Get salary record details
    SELECT 
        COALESCE(basic_salary, 0.00),
        COALESCE(day_value, 0.00),
        COALESCE(target, 0.00)
    INTO 
        v_basic_salary,
        v_day_value,
        v_target
    FROM salary_records
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month
    LIMIT 1;

    -- Get aggregated values
    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_overtime_days
    FROM salary_overtime_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_bonuses
    FROM salary_bonuses
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_advances
    FROM salary_advances
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_absent_days
    FROM salary_absent_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_deduction_days
    FROM salary_deductions
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    -- Calculate total
    SET v_total = v_basic_salary + 
                  (v_overtime_days * v_day_value) + 
                  v_target + 
                  v_bonuses - 
                  v_advances - 
                  (v_absent_days * v_day_value) - 
                  (v_deduction_days * v_day_value);

    -- Update salary_records
    UPDATE salary_records
    SET total = v_total
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;
END //
DELIMITER ;

-- Trigger for salary_deductions
DELIMITER //
CREATE TRIGGER after_salary_deductions_insert
AFTER INSERT ON salary_deductions
FOR EACH ROW
BEGIN
    DECLARE v_basic_salary DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_day_value DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_target DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_overtime_days INT DEFAULT 0;
    DECLARE v_bonuses INT DEFAULT 0;
    DECLARE v_advances INT DEFAULT 0;
    DECLARE v_absent_days INT DEFAULT 0;
    DECLARE v_deduction_days INT DEFAULT 0;
    DECLARE v_total DECIMAL(10,2);
    DECLARE v_year INT;
    DECLARE v_month INT;

    -- Extract year and month from the inserted record
    SET v_year = YEAR(NEW.created_at);
    SET v_month = MONTH(NEW.created_at);

    -- Get salary record details
    SELECT 
        COALESCE(basic_salary, 0.00),
        COALESCE(day_value, 0.00),
        COALESCE(target, 0.00)
    INTO 
        v_basic_salary,
        v_day_value,
        v_target
    FROM salary_records
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month
    LIMIT 1;

    -- Get aggregated values
    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_overtime_days
    FROM salary_overtime_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_bonuses
    FROM salary_bonuses
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_advances
    FROM salary_advances
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_absent_days
    FROM salary_absent_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_deduction_days
    FROM salary_deductions
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    -- Calculate total
    SET v_total = v_basic_salary + 
                  (v_overtime_days * v_day_value) + 
                  v_target + 
                  v_bonuses - 
                  v_advances - 
                  (v_absent_days * v_day_value) - 
                  (v_deduction_days * v_day_value);

    -- Update salary_records
    UPDATE salary_records
    SET total = v_total
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;
END //
DELIMITER ;

-- Trigger for salary_overtime_days
DELIMITER //
CREATE TRIGGER after_salary_overtime_days_insert
AFTER INSERT ON salary_overtime_days
FOR EACH ROW
BEGIN
    DECLARE v_basic_salary DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_day_value DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_target DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_overtime_days INT DEFAULT 0;
    DECLARE v_bonuses INT DEFAULT 0;
    DECLARE v_advances INT DEFAULT 0;
    DECLARE v_absent_days INT DEFAULT 0;
    DECLARE v_deduction_days INT DEFAULT 0;
    DECLARE v_total DECIMAL(10,2);
    DECLARE v_year INT;
    DECLARE v_month INT;

    -- Extract year and month from the inserted record
    SET v_year = YEAR(NEW.created_at);
    SET v_month = MONTH(NEW.created_at);

    -- Get salary record details
    SELECT 
        COALESCE(basic_salary, 0.00),
        COALESCE(day_value, 0.00),
        COALESCE(target, 0.00)
    INTO 
        v_basic_salary,
        v_day_value,
        v_target
    FROM salary_records
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month
    LIMIT 1;

    -- Get aggregated values
    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_overtime_days
    FROM salary_overtime_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_bonuses
    FROM salary_bonuses
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(amount), 0)
    INTO v_advances
    FROM salary_advances
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_absent_days
    FROM salary_absent_days
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    SELECT 
        COALESCE(SUM(days), 0)
    INTO v_deduction_days
    FROM salary_deductions
    WHERE agent_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;

    -- Calculate total
    SET v_total = v_basic_salary + 
                  (v_overtime_days * v_day_value) + 
                  v_target + 
                  v_bonuses - 
                  v_advances - 
                  (v_absent_days * v_day_value) - 
                  (v_deduction_days * v_day_value);

    -- Update salary_records
    UPDATE salary_records
    SET total = v_total
    WHERE instructor_id = NEW.agent_id
    AND YEAR(created_at) = v_year
    AND MONTH(created_at) = v_month;
END //
DELIMITER ;